{
  "$schema": "https://schema.management.azure.com/schemas/20150101/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  
  "parameters": {
    "siteName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "_artifactsLocation": {
        "type": "string",
        "metadata": {
            "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
        "defaultValue": "https://raw.githubusercontent.com/akmgcloud/cdiejbcalculatorarmdeployment/main/"
    },
    "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
            "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
    },
    "appServiceName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 10
    },
    "appServicePlanName": {
      "type": "string",
      "minLength": 1
    },
    "appServicePlanSkuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/enus/pricing/details/appservice/"
      }
    },
    "dockerImageName": {
      "type": "string",
      "defaultValue": "cdiejbcalculator:latest",
 	"metadata": {
        "description": "Describes the name of the docker image which will be finally deployed"
      }
    },
    "spIdentity": {
	"defaultValue": "783ba0eb48b14259892c76e320992a87",
	"type": "String",
	"metadata": {
		"description": "The service principal ID of the used managed identity."
	}
     }
  },
  "variables": {
    "appHostingPlanNameVar": "[concat(parameters('appServicePlanName'),'apps')]",
    "acrName": "[concat(parameters('siteName'), 'acr')]",
    "arcPullRole": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '7f951dda4ed34680a7ca43fe172d538d')]",
    "roleContributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac618042a0ab8820f7382dd24c')]",
    "roleAssignmentName": "[concat(variables('acrName'), '/Microsoft.Authorization/', guid(concat(resourceGroup().id), variables('arcPullRole')))]"
   },
  "resources": [
    {
      "apiVersion": "20170510",
      "name": "linkedAcrTemplate",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'), concat('azurecontainerregistrydeploy.json', parameters('_artifactsLocationSasToken')))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "acrName": {
            "value": "[variables('acrName')]"
          },
          "acrAdminUserEnabled": {
            "value": true
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "20170501",
      "name": "f7036b053cc541598f6e250fcf9e1610",
      "dependsOn": [
        "linkedAcrTemplate"
      ],
      "properties": {
        "roleDefinitionId": "[variables('arcPullRole')]",
	"principalId": "[parameters('spIdentity')]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "apiVersion": "20170510",
      "name": "linkedAciTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "linkedAcrTemplate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'), concat('azurecontainerinstancedeploy.json', parameters('_artifactsLocationSasToken')))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "siteName": {
            "value": "[parameters('siteName')]"
          },
          "acrName": {
            "value": "[variables('acrName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "20170501",
      "name": "f7036b053cc541598f6e250fcf9e1611",
      "dependsOn": [
        "linkedAciTemplate"
      ],
      "properties": {
        "roleDefinitionId": "[variables('roleContributor')]",
        "principalId": "[parameters('spIdentity')]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "apiVersion": "20180201",
      "type": "Microsoft.Web/serverfarms",
      "kind": "linux",
      "name": "[parameters('appServicePlanName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "linkedAciTemplate"
      ],
      "properties": {
        "name": "[parameters('appServicePlanName')]",
        "reserved": true,
        "numberOfWorkers": "1"
      },
      "sku": {
        "name": "[parameters('appServicePlanSkuName')]"
      }
    },
    {
      "apiVersion": "20180201",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('siteName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ],
      "properties": {
        "siteConfig": {
          "name": "[parameters('siteName')]",
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[reference('linkedAcrTemplate').outputs.acrLoginServer.value]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[reference('linkedAcrTemplate').outputs.registryUsername.value]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[reference('linkedAcrTemplate').outputs.registryPassword.value]"
            }
          ],
          "linuxFxVersion": "[concat('DOCKER|', reference('linkedAcrTemplate').outputs.acrLoginServer.value, '/', parameters('dockerImageName'))]"
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      }
     }
  ],
  "outputs": {}
}
